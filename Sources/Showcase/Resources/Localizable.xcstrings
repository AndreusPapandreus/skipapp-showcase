{
  "sourceLanguage" : "en",
  "strings" : {
    "" : {

    },
    "... and hidden separators" : {

    },
    ".autocorrectionDisabled()" : {

    },
    ".backgroundStyle(.red)" : {

    },
    ".blue, 5.0" : {

    },
    ".blue.gradient, 10.0" : {

    },
    ".border" : {

    },
    ".bordered, .disabled(true): %lld" : {

    },
    ".bordered, .foregroundStyle(.red): %lld" : {

    },
    ".bordered, .tint(.red): %lld" : {

    },
    ".bordered: %lld" : {

    },
    ".borderedProminent, .destructive: %lld" : {

    },
    ".borderedProminent, .disabled(true): %lld" : {

    },
    ".borderedProminent, .foregroundStyle(.red): %lld" : {

    },
    ".borderedProminent, .tint(.red): %lld" : {

    },
    ".borderedProminent: %lld" : {

    },
    ".buttonStyle(.bordered)" : {

    },
    ".buttonStyle(.plain)" : {

    },
    ".clipped()" : {

    },
    ".clipShape(.capsule)" : {

    },
    ".destructive: %lld" : {

    },
    ".disabled(true)" : {

    },
    ".disabled(true): %lld" : {

    },
    ".font(.title)" : {

    },
    ".foregroundStyle(.red)" : {

    },
    ".foregroundStyle(.red), .disabled(true): %lld" : {

    },
    ".foregroundStyle(.red): %lld" : {

    },
    ".frame(100, 100)" : {

    },
    ".frame(100, 100)\nclipped" : {

    },
    ".init(_ label:action:): %lld" : {

    },
    ".init(_:destination:)" : {

    },
    ".init(_:icon:)" : {

    },
    ".init(_:systemImage:)" : {

    },
    ".init(_:text:)" : {

    },
    ".init(action:label:): %lld" : {

    },
    ".init(destination:label:)" : {

    },
    ".init(text:label:)" : {

    },
    ".keyboardType(.%@)" : {

    },
    ".labelsHidden():" : {

    },
    ".lineLimit(1): This is some long text that should wrap when it exceeds the width of its frame" : {

    },
    ".offset(-50, 50)" : {

    },
    ".offset(0, 0)" : {

    },
    ".offset(50, -50)" : {

    },
    ".offset(CGSize(50, 50))" : {

    },
    ".onDelete" : {

    },
    ".onLongPressGesture: %lld" : {

    },
    ".onMove" : {

    },
    ".onMove, .onDelete" : {

    },
    ".onTapGesture(2): (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : ".onTapGesture(2): (%1$lld, %2$lld)"
          }
        }
      }
    },
    ".padding()" : {

    },
    ".padding([.top, .leading])" : {

    },
    ".pickerStyle(.navigationLink)" : {

    },
    ".plain, .disabled(true): %lld" : {

    },
    ".plain: %lld" : {

    },
    ".red" : {

    },
    ".red.gradient" : {

    },
    ".red.opacity(0.5)" : {

    },
    ".resizable\n.frame(100, 100)" : {

    },
    ".resizable()\n.aspectRatio(0.33, .fill)\n.frame(100, 100)\n.clipped" : {

    },
    ".resizable()\n.aspectRatio(0.33, .fit)\n.frame(100, 100)" : {

    },
    ".resizable()\n.aspectRatio(3, .fit)\n.frame(100, 100)" : {

    },
    ".resizable()\n.aspectRatio(3, .fit)\n.frame(100, 100)\n.foregroundStyle(.red)" : {

    },
    ".resizable()\n.frame(100, 100)" : {

    },
    ".resizable()\n.scaleToFill\n.frame(100, 100)\n.clipped" : {

    },
    ".resizable()\n.scaleToFit\n.frame(100, 100)" : {

    },
    ".submitLabel(.%@)" : {

    },
    ".textInputAutocapitalization(.%@)" : {

    },
    ".tint(.red)" : {

    },
    ".tint(.red), .disabled(true): %lld" : {

    },
    ".tint(.red): %lld" : {

    },
    "@Environment(\\.openURL)" : {

    },
    "%@ .deleteDisabled" : {

    },
    "%@ .moveDisabled" : {

    },
    "A" : {

    },
    "About" : {

    },
    "Accent color" : {

    },
    "Add item" : {

    },
    "After" : {

    },
    "After another section empty row" : {

    },
    "After expanding" : {

    },
    "After fixed" : {

    },
    "After initial empty row" : {

    },
    "After initial section empty row" : {

    },
    "After vstack" : {

    },
    "alignment: .bottomTrailing" : {

    },
    "alignment: .topLeading" : {

    },
    "AsyncImage" : {

    },
    "B" : {

    },
    "background()" : {

    },
    "Before" : {

    },
    "Before final empty row" : {

    },
    "Before final section empty row" : {

    },
    "Before fixed" : {

    },
    "Before vstack" : {

    },
    "Binding" : {

    },
    "Binding View" : {

    },
    "Black" : {

    },
    "Blue" : {

    },
    "Bold" : {

    },
    "Bool AppStorage" : {

    },
    "Border" : {

    },
    "Bound tap count 1: %lld" : {

    },
    "Bound tap count 2: %lld" : {

    },
    "Brown" : {

    },
    "Bundled Image" : {

    },
    "Button" : {

    },
    "Button .automatic" : {

    },
    "Button .bordered" : {

    },
    "Button in custom view" : {

    },
    "Cancel" : {

    },
    "Capsule" : {

    },
    "Circle" : {

    },
    "Circles" : {

    },
    "Clear" : {

    },
    "Collection Content" : {

    },
    "Color" : {

    },
    "Combination" : {

    },
    "Complex content button" : {

    },
    "Content %lld" : {

    },
    "Content row %lld" : {

    },
    "Content sizes to stack:" : {

    },
    "Custom" : {

    },
    "Custom Cancel" : {

    },
    "Custom closure" : {

    },
    "Custom placeholder" : {

    },
    "Cyan" : {

    },
    "Data: %@" : {

    },
    "Data: %lld" : {

    },
    "Date only" : {

    },
    "DatePicker" : {

    },
    "DatePicker .disabled" : {

    },
    "Default" : {

    },
    "Default URL" : {

    },
    "Destructive" : {

    },
    "Disabled tap: (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Disabled tap: (%1$lld, %2$lld)"
          }
        }
      }
    },
    "Dismiss" : {

    },
    "Dismiss via environment" : {

    },
    "Dismiss via state" : {

    },
    "Done" : {
      "comment" : "Done button text",
      "extractionState" : "stale",
      "localizations" : {
        "ar" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "تم"
          }
        },
        "de" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Fertig"
          }
        },
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Hecho"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Terminé"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "完成"
          }
        },
        "zh-Hant" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "完成"
          }
        }
      }
    },
    "Double tap: (%lf, %lf)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Double tap: (%1$lf, %2$lf)"
          }
        }
      }
    },
    "Double tap: (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Double tap: (%1$lld, %2$lld)"
          }
        }
      }
    },
    "Drag" : {

    },
    "EllipitcalGradient" : {

    },
    "Ellipse" : {

    },
    "Enum AppStorage" : {

    },
    "Favorites" : {

    },
    "Fill" : {

    },
    "Fill & Stroke" : {

    },
    "fill(.red.gradient)" : {

    },
    "fill(.red)" : {

    },
    "fill(.red)\n  .stroke(.green, lineWidth: 10)" : {

    },
    "First" : {

    },
    "First: %lld" : {

    },
    "Fixed content" : {

    },
    "Fixed Content" : {

    },
    "Fixed width" : {

    },
    "Font.body" : {

    },
    "Font.callout" : {

    },
    "Font.caption" : {

    },
    "Font.caption2" : {

    },
    "Font.footnote" : {

    },
    "Font.headline" : {

    },
    "Font.largeTitle" : {

    },
    "Font.subheadline" : {

    },
    "Font.title" : {

    },
    "Font.title2" : {

    },
    "Font.title3" : {

    },
    "Footer" : {

    },
    "Footer 2" : {

    },
    "Footer 3" : {

    },
    "ForEach index row: %lld" : {

    },
    "ForEach row: %lld.%lld" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "ForEach row: %1$lld.%2$lld"
          }
        }
      }
    },
    "ForEach row: 1.%lld" : {

    },
    "ForEach row: 2.%lld" : {

    },
    "ForEach row: 3.%lld" : {

    },
    "ForEach section %lld" : {

    },
    "Gray" : {

    },
    "Green" : {

    },
    "height: 50" : {

    },
    "Hello" : {
      "localizations" : {
        "ar" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "مرحبا"
          }
        },
        "de" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Hallo"
          }
        },
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Hola"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bonjour"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "你好"
          }
        },
        "zh-Hant" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "你好"
          }
        }
      }
    },
    "Home" : {

    },
    "in: Capsule()" : {

    },
    "Increment counter: %lld" : {

    },
    "Increment last" : {

    },
    "Indeterminate" : {

    },
    "Indeterminate linear" : {

    },
    "Indeterminate, .tint(.red)" : {

    },
    "Indexed Content" : {

    },
    "Indexed ForEach" : {

    },
    "Indigo" : {

    },
    "Info" : {

    },
    "Inner button" : {

    },
    "inset(by: 10)" : {

    },
    "iOS 17 / macOS 14 required for Observation framework" : {

    },
    "isOn" : {

    },
    "isSearching:" : {

    },
    "Italic" : {

    },
    "Item %lld" : {

    },
    "Label" : {

    },
    "Label .font(.title)" : {

    },
    "Label .foregroundStyle(.red)" : {

    },
    "Label .listItemTint(.red)" : {

    },
    "Label .navigationLink" : {

    },
    "Label .tint(.red)" : {

    },
    "Label in NavigationLink" : {

    },
    "Label items" : {

    },
    "Large circle" : {

    },
    "LinearGradient" : {

    },
    "List" : {

    },
    "Localization" : {

    },
    "Long press: %lld" : {

    },
    "LongPress: %lld" : {

    },
    "Menu" : {

    },
    "Mint" : {

    },
    "minWidth: 0, maxWidth: .infinity,\n  minHeight: 0, maxHeight: .infinity" : {

    },
    "minWidth: 100,\n  minHeight: 0, maxHeight: .infinity" : {

    },
    "minWidth: 300, maxWidth: .infinity,\n  minHeight: 100, maxHeight: .infinity" : {

    },
    "My message" : {

    },
    "My subject" : {

    },
    "Nested" : {

    },
    "Nested Again" : {

    },
    "Nested ForEach row: %lld.%lld" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Nested ForEach row: %1$lld.%2$lld"
          }
        }
      }
    },
    "Nested menu" : {

    },
    "Nil Data" : {

    },
    "NO" : {

    },
    "No URL" : {

    },
    "No URL\n.frame(100, 100)" : {

    },
    "Note: colors should not affect Divider appearance" : {

    },
    "Note: Picker displays differently when in a Form. See the Form playground" : {

    },
    "Note: tint should not affect Label appearance" : {

    },
    "Observable" : {

    },
    "Observable tap count: %lld" : {

    },
    "offset(x: 30, y: 10)" : {

    },
    "onTapGesture: (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "onTapGesture: (%1$lld, %2$lld)"
          }
        }
      }
    },
    "Option" : {

    },
    "Option %lld" : {

    },
    "Option 1" : {

    },
    "Option 2" : {

    },
    "Option 3" : {

    },
    "Option 4" : {

    },
    "Orange" : {

    },
    "Overridden to title font" : {

    },
    "Picker" : {

    },
    "Picker .disabled" : {

    },
    "Picker .foregroundStyle(.red)" : {

    },
    "Picker .labelsHidden (below)" : {

    },
    "Picker .navigationLink" : {

    },
    "Picker .tint(.red)" : {

    },
    "Pink" : {

    },
    "Pink Row Background" : {

    },
    "Plain" : {

    },
    "Plain Style" : {

    },
    "Pop" : {

    },
    "Present" : {

    },
    "Present another" : {

    },
    "Present sheet" : {

    },
    "Present with data" : {

    },
    "Primary" : {

    },
    "PrimaryAction: %lld" : {

    },
    "Progress 0.5" : {

    },
    "Progress 0.5 circular" : {

    },
    "Progress 0.5, .tint(.red)" : {

    },
    "Progress nil" : {

    },
    "Prompt" : {

    },
    "Purple" : {

    },
    "Push another" : {

    },
    "Push binding" : {

    },
    "Push binding view" : {

    },
    "RadialGradient" : {

    },
    "Rectangle" : {

    },
    "Red" : {

    },
    "Red, .opacity(0.5)" : {

    },
    "Repository item tap count: %lld" : {

    },
    "RGB" : {

    },
    "Rotation" : {

    },
    "rotation(Angle(degrees: 45))" : {

    },
    "RoundedRectangle" : {

    },
    "Row %lld" : {

    },
    "Row 1" : {

    },
    "Row 1.1" : {

    },
    "Row 2" : {

    },
    "Row 2.1" : {

    },
    "Row 3a" : {

    },
    "Row 3b" : {

    },
    "Row: 1.%lld" : {

    },
    "Row: 2.%lld" : {

    },
    "scale, rotate, offset, stroke" : {

    },
    "scale: 2.0" : {

    },
    "scale(x: 0.5, y: 1.2)" : {

    },
    "scale(x: 1.0, y: -1.0)" : {

    },
    "Scrolling" : {

    },
    "Second" : {

    },
    "Second: %lld" : {

    },
    "Secondary" : {

    },
    "Section" : {

    },
    "Section 0 (Fixed)" : {

    },
    "Section 1" : {

    },
    "Section 2" : {

    },
    "Sheet" : {

    },
    "Showcase" : {
      "comment" : "localized string"
    },
    "Showcase is a dual-platform iOS + Android app written in Swift and SwiftUI. It demonstrates and exercises Skip's support for various SwiftUI constructs on Android" : {

    },
    "Sized to content:" : {

    },
    "Small circle" : {

    },
    "Source" : {

    },
    "Spacer" : {

    },
    "Standalone row 1" : {

    },
    "Standalone row 2" : {

    },
    "Standalone row 3" : {

    },
    "Standard Row Background" : {

    },
    "State" : {

    },
    "State tap count: %lld" : {

    },
    "Storage" : {

    },
    "Storage Binding" : {

    },
    "String init" : {

    },
    "Stroke" : {

    },
    "stroke x2" : {

    },
    "stroke(.red,\n    style: StrokeStyle(\n    lineWidth: 10.0,\n      dash: [10]))" : {

    },
    "stroke(.red, lineWidth: 10)" : {

    },
    "stroke(.red.gradient, lineWidth: 10)" : {

    },
    "stroke()" : {

    },
    "strokeBorder(.red, lineWidth: 10)" : {

    },
    "Struct" : {

    },
    "Struct (field)" : {

    },
    "Struct tap count (field): %lld" : {

    },
    "Struct tap count: %lld" : {

    },
    "Subject & Message" : {

    },
    "Subject & Message URL" : {

    },
    "Switch to Favorites" : {

    },
    "Switch to Home" : {

    },
    "Switch to Info" : {

    },
    "Symbol" : {

    },
    "systemName" : {

    },
    "Tap below to increment state tap count" : {

    },
    "Tap: (%lf, %lf)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Tap: (%1$lf, %2$lf)"
          }
        }
      }
    },
    "Tap: (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Tap: (%1$lld, %2$lld)"
          }
        }
      }
    },
    "Tap(2): (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "Tap(2): (%1$lld, %2$lld)"
          }
        }
      }
    },
    "TapGesture: (%lld, %lld)" : {
      "localizations" : {
        "en" : {
          "stringUnit" : {
            "state" : "new",
            "value" : "TapGesture: (%1$lld, %2$lld)"
          }
        }
      }
    },
    "Teal" : {

    },
    "Test" : {

    },
    "Text" : {

    },
    "Text & Divider" : {

    },
    "Text field" : {

    },
    "Text1" : {

    },
    "Text2" : {

    },
    "Thin footnote container" : {

    },
    "Third" : {

    },
    "Third: %lld" : {

    },
    "This is the message" : {

    },
    "This text uses a custom modifier that adds a Dismiss button to the navigation bar above" : {

    },
    "This view only renders on Android" : {

    },
    "Time only" : {

    },
    "Title" : {

    },
    "Title + Message" : {

    },
    "Title bold italic" : {

    },
    "Toggle" : {

    },
    "Transforms" : {

    },
    "UnevenRoundedRectangle" : {

    },
    "Vertical" : {

    },
    "Vertical fixed height" : {

    },
    "Viewbuilder init" : {

    },
    "VStack" : {

    },
    "Welcome" : {
      "localizations" : {
        "ar" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "أهلاً وسهلاً"
          }
        },
        "ca" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Benvingut"
          }
        },
        "de" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Willkommen"
          }
        },
        "el" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Καλώς ορίσατε"
          }
        },
        "es" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bienvenido"
          }
        },
        "fr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bienvenue"
          }
        },
        "id" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Selamat datang"
          }
        },
        "it" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Benvenuto"
          }
        },
        "ja" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ようこそ"
          }
        },
        "ko" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "환영합니다"
          }
        },
        "ms" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Selamat datang"
          }
        },
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Welkom"
          }
        },
        "pl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Witaj"
          }
        },
        "pt-BR" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Bem-vindo"
          }
        },
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Добро пожаловать"
          }
        },
        "sv" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Välkommen"
          }
        },
        "th" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "ยินดีต้อนรับ"
          }
        },
        "tr" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Hoş geldiniz"
          }
        },
        "uk" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Ласкаво просимо"
          }
        },
        "vi" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Chào mừng"
          }
        },
        "zh-Hans" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "欢迎"
          }
        },
        "zh-Hant" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "歡迎"
          }
        }
      }
    },
    "White" : {

    },
    "White, Opacity" : {

    },
    "width: 100" : {

    },
    "width: 100, height: 50" : {

    },
    "width: 100, height: 100" : {

    },
    "With prompt" : {

    },
    "With zIndex" : {

    },
    "With zIndex before frame" : {

    },
    "Without zIndex" : {

    },
    "Wrap: This is some long text that should wrap when it exceeds the width of its frame" : {

    },
    "Yellow" : {

    },
    "YES" : {

    }
  },
  "version" : "1.0"
}